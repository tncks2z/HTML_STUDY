// 변수 선언 가능($ 이용)
$main-color: #2a4cb2;
$sub-color: #eeee;
$main-fs: 16px;

// use 문법 -> 다른 파일에 있는 내용들을 갖고오고 싶을 때
@use 'reset';

// extend 문법
// % : 임시클래스 -> 단독으로는 compile 되지 않음
%btn {
	width: 100px;
	height: 100px;
	padding: 20px;
}
%box {
	width: 200px;
	height: 200px;
	padding: 20px;
	background-color: reset.$div-color; //use에서 가져온 변수를 사용할 때는 앞에 " 파일명. "을 꼭 붙여줄것
}
.box-red {
	@extend %box;
	background-color: red;
}
.box-blue {
	@extend %box;
	background-color: blue;
}
.box-green {
	@extend %box;
	background-color: green;
}
.btn-green {
	@extend %btn;
	background-color: green;
}
.btn-blue {
	@extend %btn;
	background-color: blue;
}
.btn-red {
	@extend %btn;
	background-color: red;
}

// nesting문법
.main-bg {
	h4 {
		font-size: $main-fs;
	}
	button {
		color: $main-color;
	}
}

//mixin 문법 -> css를 함수처럼 사용
@mixin fontStyle($size, $spacing, $param) {
	font-size: $size;
	letter-spacing: $spacing;
	#{ $param }: blue;
}
h2 {
	@include fontStyle(40px, 2px, color);
}
h3 {
	@include fontStyle(30px, 1px, color);
}
h4 {
	@include fontStyle(20px, 0px, color);
}

// 사칙연산 가능
.background {
	background-color: $main-color;
	font-size: ($main-fs / 2px);
}
.box {
	color: $sub-color;
	font-size: ($main-fs + 2px);
}
i {
	color: $main-color;
}
